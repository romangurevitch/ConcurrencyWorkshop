name: Go Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '**'

jobs:
  Test_Examples:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-modules.outputs.key }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Run Tests
        run: make test

  Test_Challenge_FixMe:
    needs: Test_Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        level: [ basic, intermediate, advanced ]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Check for changes in fixme-${{ matrix.level }} package
        id: changes
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          if git diff --quiet origin/${{ github.base_ref }} -- internal/challenge/fixme/${{ matrix.level }}; then
            echo "no changes" && echo "run=false" >> $GITHUB_OUTPUT
          else
            echo "changes detected" && echo "run=true" >> $GITHUB_OUTPUT
          fi

      - name: Run fix me tests
        if: steps.changes.outputs.run == 'true'
        run: make fixme-${{ matrix.level }}

  Test_Challenge_ImplMe:
    needs: Test_Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        level: [ basic, intermediate, advanced ]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Check for changes in implme-${{ matrix.level }} package
        id: changes
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          if git diff --quiet origin/${{ github.base_ref }} -- internal/challenge/implme/${{ matrix.level }}; then
            echo "no changes" && echo "run=false" >> $GITHUB_OUTPUT
          else
            echo "changes detected" && echo "run=true" >> $GITHUB_OUTPUT
          fi

      - name: Run implement me tests
        if: steps.changes.outputs.run == 'true'
        run: make implme-${{ matrix.level }}
